<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>putz.space</title><link href="https://web.putz.space/" rel="alternate"/><link href="https://web.putz.space/feeds/all.atom.xml" rel="self"/><id>https://web.putz.space/</id><updated>2023-07-13T00:00:00-05:00</updated><subtitle>Web Designer, Developer and Freelancer</subtitle><entry><title>Tools of the Trade</title><link href="https://web.putz.space/lessons-learned/tools-of-the-trade/" rel="alternate"/><published>2023-07-13T00:00:00-05:00</published><updated>2023-07-09T13:41:22-05:00</updated><author><name>Pierce Putz</name></author><id>tag:web.putz.space,2023-07-13:/lessons-learned/tools-of-the-trade/</id><summary type="html">&lt;p&gt;A brief overview of all the different tools needed for web development.&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Intro&lt;/h2&gt;
&lt;p&gt;Modern websites are built with an overwhelming amount of tools that can seem daunting to learn at first. However, they serve to make web development more efficient, collaborative and maintainable over the long haul. The tools below are what I've found to be worth learning and essential for professional work.&lt;/p&gt;
&lt;p&gt;Let's talk about what they are and how they fit into the web development process.&lt;/p&gt;
&lt;h2&gt;Web Browsers&lt;/h2&gt;
&lt;p&gt;Starting with the obvious, there would be no web without web browsers. They have come a long way since their inception and have transformed from simple document viewers into full-blown, mini sandboxed operating systems of their own.&lt;/p&gt;
&lt;p&gt;Browsers like Chrome, Firefox and even Edge all offer developer consoles that allow for inspection of the current page, style sheets, network performance, JavaScript debugging and more. Besides just viewing how the page will look to users, they're a tool of their own.&lt;/p&gt;
&lt;h2&gt;Languages&lt;/h2&gt;
&lt;p&gt;The foundation of the web is built on three main languages:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Hypertext Markup Language (HTML)&lt;/li&gt;
&lt;li&gt;Cascading Style Sheets (CSS)&lt;/li&gt;
&lt;li&gt;JavaScript (JS)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;HTML structures page information meaningfully so that computers and users can make sense of it.&lt;/p&gt;
&lt;p&gt;CSS describes the presentation of the elements within the document. A stylesheet can be used across multiple pages. The "Cascade" refers to the way that styles are applied by overlapping rules, where general rules are overwritten by more specific styles.&lt;/p&gt;
&lt;p&gt;JavaScript is the scripting language that gives pages behavior, such as expanding menus or manipulating page elements dynamically. This is usually run on the client's own device, but frameworks like node.js allow for servers to use it as well.&lt;/p&gt;
&lt;p&gt;There are a variety of server-side languages such as Python, PHP, C# and more that all let a website run live programs that users can interact with (such as a database), but they aren't strictly required to make a web page work. How they're used depends on the type of website.&lt;/p&gt;
&lt;p&gt;In general, you need to understand the task at hand to know which language should be used to acheive your goals. &lt;/p&gt;
&lt;h2&gt;Text editors&lt;/h2&gt;
&lt;p&gt;Websites at their most basic are simply a collection of text files. Therefore text editors are essential to create them.&lt;/p&gt;
&lt;p&gt;There's a full spectrum of options, with the humble and familiar notepad.exe at one end to the more serious and robust Visual Studio Code at the other, which offers plugins for a variety of needs.&lt;/p&gt;
&lt;p&gt;At a minimum, code highlighting is a must. Others offer integration with git and extended features for specific coding languages that make working much faster and more enjoyable.&lt;/p&gt;
&lt;h2&gt;Version Control&lt;/h2&gt;
&lt;p&gt;Version control is software that keeps track of file changes over time. It also facilitates collaboration by allowing users to write summaries of those changes and merge together code from others.&lt;/p&gt;
&lt;p&gt;Git is the most popular and has a variety of hosting platforms available such as GitHub, which even offers free hosting for static web pages.&lt;/p&gt;
&lt;h2&gt;Graphic Editors&lt;/h2&gt;
&lt;p&gt;Editing or creating images will require their own tools as well. For logos and scalable graphics there are editors like Inkscape that allow for exporting Scalable Vector Graphics (SVG), which will use math to draw images that can stay crisp when a user zooms in. SVG has the added benefit of being dynamically manipulated with JavaScript if needed.&lt;/p&gt;
&lt;p&gt;For traditional photos (image files like .jpg or .png) there are tools like Photoshop, or my own preference &lt;a href="https://www.gimp.org/"&gt;GNU Image Manipulation Program&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;There are also command line tools such as find, ffmpeg or convert that can be useful if you need to make batch edits to many files at once.&lt;/p&gt;
&lt;h2&gt;Design Tools&lt;/h2&gt;
&lt;p&gt;When a website is still in the drafting stage, it's helpful to prototype what it could look like to see how initial ideas actually play out in practice. Ideally you should sketch a wireframe first (i.e: rough draft of the layout), which can be done in a graphic editor or on pen and paper.&lt;/p&gt;
&lt;p&gt;Once you have the information laid out a prototype helps bring it to life. On an already existing site there may even be a design library that has modular components which can serve as the building blocks for what already exists on other parts of the site.&lt;/p&gt;
&lt;p&gt;Design Tools are varied but they all help to make putting together the actual website according to a well-thought plan.&lt;/p&gt;
&lt;h2&gt;Frameworks and Libraries&lt;/h2&gt;
&lt;p&gt;Frameworks and Libraries are built using languages like JavaScript that provide a set of functionality not found in the language by default. They are added to a website either through linking a Content Delivery Network (CDN), by including a copy on your site or downloading the development libraries from a package manager like node's (NPM).&lt;/p&gt;
&lt;p&gt;For example, Bootstrap provides a series of ready made web components like accordion menus and progress bars that would otherwise have to be made from scratch. It can speed up development and provide developers with a familiar codebase.&lt;/p&gt;
&lt;p&gt;React is a fairly popular framework for creating web apps that takes things a step further by creating an entire coding paradigm. It introduces a renderer that runs on "state", by thinking of the app in terms of the different views it undertakes to accomplish things.&lt;/p&gt;
&lt;p&gt;Frameworks have their own learning curve, but heavily depend on the base language that they're built on, so mastering the language fundamentals should come first to better understand how a framework makes sense. That said, learning one reinforces the other.&lt;/p&gt;
&lt;h2&gt;Processors&lt;/h2&gt;
&lt;p&gt;Processors generally modify code so that they conform with a style guide (Prettier) or avoid hard to debug errors (ESlint). They're not essential to the web but make development much smoother.&lt;/p&gt;
&lt;p&gt;In the case of CSS there's also Syntactically Awesome Style Sheets (Sass), which adds language features such as control flow and variables. It understands and exports to native CSS, but allows for writing code that is less tedious and easier to update over time.&lt;/p&gt;
&lt;h2&gt;Databases&lt;/h2&gt;
&lt;p&gt;A database helps separate data from the website itself. This is useful when there are multiple ways to interact with the data, whether as an app or for third parties.&lt;/p&gt;
&lt;p&gt;This requires a server running that actively processes incoming commands and changes dynamically according to user input. Many Content Management Systems (CMS) take advantage of a database.&lt;/p&gt;
&lt;h2&gt;Site Generators and Content Management&lt;/h2&gt;
&lt;p&gt;A Static Site Generator (SSG) can be used to create a website that does not need server side processing to work. This website is made with one! It exports HTML files that can be viewed without further processing by the hosting server.&lt;/p&gt;
&lt;p&gt;A Content Management System (CMS) is a way to write and keep track of posts for a website. They can be hosted locally or online, depending on the infrastructure. This often makes use of a database and when hosted online can allow users to easily add content without having to have technical knowledge.&lt;/p&gt;
&lt;h2&gt;Domain Names and Hosting&lt;/h2&gt;
&lt;p&gt;The Domain Name System (DNS) is a glorified phonebook that the web uses to link together a named address (i.e: example.com) to IP addresses (i.e: 127.0.0.1) of hosting servers for easier access. Websites that sell domain names are called registrars.&lt;/p&gt;
&lt;p&gt;A server is a host that allows people to connect to a given website. It sends the actual files of the website to users when requested. The web browser processes those files to create the actual web page once downloaded.&lt;/p&gt;
&lt;p&gt;Some domain name registrars double as web hosts who can do both, but it's common to have separate hosting and domain name registry.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;While not exhaustive, this list of tools is the majority of what is needed to specifically create a website. There are others that could help, such as video conference tools, workspaces or task management apps, but those apply to projects more generally whether web design or not. The tools above are the foundations of modern web development.&lt;/p&gt;</content><category term="Lessons Learned"/><category term="Web Design"/></entry><entry><title>The Web Industry and Team</title><link href="https://web.putz.space/lessons-learned/the-web-industry-and-team/" rel="alternate"/><published>2023-07-06T00:00:00-05:00</published><updated>2023-07-09T13:06:49-05:00</updated><author><name>Pierce Putz</name></author><id>tag:web.putz.space,2023-07-06:/lessons-learned/the-web-industry-and-team/</id><summary type="html">&lt;p&gt;An overview of roles within the web industry.&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Intro&lt;/h2&gt;
&lt;p&gt;There are a lot of disciplines that come together to create a website. Whether run by an army-of-one, or an entire organization with various departments dedicated to specialization, these are the roles that I've found through my research and experience that compromise a web development team.&lt;/p&gt;
&lt;p&gt;But first let's take a quick look at the environment those teams work in.&lt;/p&gt;
&lt;h3&gt;The Industry&lt;/h3&gt;
&lt;p&gt;It's important to understand that not all teams are built equally. They will look different based on the industry.&lt;/p&gt;
&lt;p&gt;The freelance musician who just needs a portfolio site that can easily showcase their work has vastly different needs (and budgets) from a multinational corporation with global reach.&lt;/p&gt;
&lt;p&gt;According to &lt;a href="https://www.bls.gov/ooh/computer-and-information-technology/web-developers.htm"&gt;bls.gov&lt;/a&gt; this is the Industry Concentration for Web Developers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Computer systems design and related services: 19%&lt;/li&gt;
&lt;li&gt;Educational services; state, local, and private: 8%&lt;/li&gt;
&lt;li&gt;Other information services: 6%&lt;/li&gt;
&lt;li&gt;Advertising, public relations, and related services: 6%&lt;/li&gt;
&lt;li&gt;Self-employed workers: 6%&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Of course, there are other areas and jobs that are needed on a web team as well, but as a full stack developer these were the most relevant stats to me personally.&lt;/p&gt;
&lt;p&gt;In practice this means a lot of work that web developers take on is crafting the actual system that teams will use. Full stack developers need to be able to think about the big picture and connect that to broader organizational needs, both technical or otherwise.&lt;/p&gt;
&lt;h2&gt;Roles in Web Development&lt;/h2&gt;
&lt;p&gt;Now that we're situated, let's take a look at the different areas of work that a web team needs to cover. These may vary in title depending on the team, but they all touch on fundamental operations that make a website or web system work.&lt;/p&gt;
&lt;p&gt;Below are the summaries of each role and their area of focus.&lt;/p&gt;
&lt;h3&gt;Developer&lt;/h3&gt;
&lt;p&gt;On some teams this is further divided into back end (server) and front end (user facing) development:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Take care of site functionality &amp;amp; server code.&lt;/li&gt;
&lt;li&gt;Work with any database, data processing or other needs.&lt;/li&gt;
&lt;li&gt;Take care of the site's presentation implementation: layout, dynamics, css, visuals, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Architect&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Establish framework for website (i.e: blueprints for design &amp;amp; development).&lt;/li&gt;
&lt;li&gt;Create diagrams, wireframes &amp;amp; other documents to understand the website needs &amp;amp; design.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;User Experience Designers&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Understand user behavior/needs &amp;amp; translate that into an intuitive layout/experience.&lt;/li&gt;
&lt;li&gt;Conduct usability testing.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Content Management&lt;/h3&gt;
&lt;p&gt;This team can be further divided into roles such as editors, writers, and more:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ensure that content being created meets style guides.&lt;/li&gt;
&lt;li&gt;Plan production, scheduling and focus of posts.&lt;/li&gt;
&lt;li&gt;Update content as needed.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Project Management&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Plan project details &amp;amp; organize meetings, monitor development.&lt;/li&gt;
&lt;li&gt;Plug people into roles as needed.&lt;/li&gt;
&lt;li&gt;Meet with other non-web teams such as executives or teams affected by website changes.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Analyst&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Review site analytics.&lt;/li&gt;
&lt;li&gt;Communicate with stakeholders in the web team &amp;amp; non-web teams about their needs, how they can (realistically) meet them.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Quality Assurance&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Test the functionality of changes before they goes live.&lt;/li&gt;
&lt;li&gt;Report bugs and other issues.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This covers what I've found in broad strokes. However, it's important to remember that there's overlap between roles, and having &lt;em&gt;some&lt;/em&gt; understanding of each role is helpful for collaboration. Especially when taking on more than one role.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Websites are complicated and require the expertise of various fields. Web teams require good communication with stakeholders and team members. There needs to be great care taken to make sure that collaboration is easy and frequent so that everyone is working towards the same goals.&lt;/p&gt;
&lt;p&gt;There are also considerations to be made about development workflow (such as Agile vs Waterfall), but those will be addressed in a future post when I have a chance to learn more.&lt;/p&gt;</content><category term="Lessons Learned"/><category term="Web Design"/></entry><entry><title>What I learned from putz.space</title><link href="https://web.putz.space/lessons-learned/lessons-learned/" rel="alternate"/><published>2023-06-08T00:00:00-05:00</published><updated>2023-07-09T13:06:24-05:00</updated><author><name>Pierce Putz</name></author><id>tag:web.putz.space,2023-06-08:/lessons-learned/lessons-learned/</id><summary type="html">&lt;p&gt;Reflecting on lessons learned from this portfolio project.&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Lessons learned&lt;/h2&gt;
&lt;p&gt;Over the course of creating this web portfolio I've learned the following:&lt;/p&gt;
&lt;h3&gt;Administration&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Figured out how to migrate github pages, branches and domain names.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Web Design&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Don't forget to make live content. Important for testing design.&lt;/li&gt;
&lt;li&gt;Design systems are iterative, they start messy and can be analyzed for better definition over time.&lt;/li&gt;
&lt;li&gt;How to draw focus:&lt;ul&gt;
&lt;li&gt;Use of borders on controls, titles and grounding info (i.e: where am I?).&lt;/li&gt;
&lt;li&gt;Use of typography and color to group/define content.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Learned more details about how &lt;a href="https://getpelican.com"&gt;Pelican&lt;/a&gt; templating and other internals works.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Project management&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Time management is essential.&lt;/li&gt;
&lt;li&gt;Problem solving is an inevitable time cost you'll pay. &lt;/li&gt;
&lt;li&gt;Solving issues in one project can lead to solutions in another.&lt;ul&gt;
&lt;li&gt;Pagination design work made updating Ludo Air's easier.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Understanding project purpose is key in knowing what to prioritize.&lt;/li&gt;
&lt;li&gt;When to cut material and save it for implementation later.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;I guess I'm really into loons lol.&lt;/li&gt;
&lt;/ul&gt;</content><category term="Lessons Learned"/><category term="Web Design"/></entry><entry><title>Purpose driven design</title><link href="https://web.putz.space/lessons-learned/purpose-first/" rel="alternate"/><published>2023-06-08T00:00:00-05:00</published><updated>2023-07-09T13:06:03-05:00</updated><author><name>Pierce Putz</name></author><id>tag:web.putz.space,2023-06-08:/lessons-learned/purpose-first/</id><summary type="html">&lt;p&gt;Diving into the importance of good Information Architecture &amp;amp; direction.&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;The first step to making a website is to ask a lot of questions.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Overall, you need to understand the following before even touching code:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What are the &lt;strong&gt;goals&lt;/strong&gt; of this website?&lt;/li&gt;
&lt;li&gt;Who are the &lt;strong&gt;users&lt;/strong&gt; and what are their needs?&lt;/li&gt;
&lt;li&gt;How will you create &lt;strong&gt;content&lt;/strong&gt;?&lt;/li&gt;
&lt;li&gt;What is the operating &lt;strong&gt;context&lt;/strong&gt;?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Information Architecture is a blueprint&lt;/h2&gt;
&lt;p&gt;The main purpose of &lt;strong&gt;Information Architecture&lt;/strong&gt; is making information findable and understandable.&lt;/p&gt;
&lt;p&gt;When I start a new project, I begin my research with &lt;strong&gt;Content, Context and Users&lt;/strong&gt;. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Context&lt;/strong&gt; — &lt;em&gt;Why? Where?&lt;/em&gt;&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Background Research&lt;/em&gt; — goals, plans, schedule &amp;amp; budget. &lt;/li&gt;
&lt;li&gt;&lt;em&gt;Meetings&lt;/em&gt; — understand the current operations &amp;amp; organization of who I'm working with. &lt;/li&gt;
&lt;li&gt;&lt;em&gt;Technology Assessment&lt;/em&gt; — decide on/learn hosting platform, set up dev tools, perform gap analysis.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Content&lt;/strong&gt; — &lt;em&gt;What? How?&lt;/em&gt;&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Heuristic Evaluation&lt;/em&gt; — assess design accessibility and design choices.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Content Analysis and Mapping&lt;/em&gt; — gather docs and media to investigate, map relationships.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Benchmarking&lt;/em&gt; — assess how well the website performs &amp;amp; compare to similar ones. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Users&lt;/strong&gt; — &lt;em&gt;Who?&lt;/em&gt;&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Analytics&lt;/em&gt; — see metrics about website usage.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Personas &amp;amp; Use Cases&lt;/em&gt; — investigate audience, user flows and needs.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;User Interviews &amp;amp; Testing&lt;/em&gt; — conduct usability tests and understand user needs.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;From Nothing to Something&lt;/h2&gt;
&lt;p&gt;The goal of collecting the information above is to shine a light that lets you see the &lt;em&gt;overall&lt;/em&gt; situation. Questions that weren't clear before start to make sense as more knowledge is gathered and ideas start to take shape.&lt;/p&gt;
&lt;p&gt;Eventually it becomes possible to craft a &lt;strong&gt;strategy&lt;/strong&gt;. These are the lessons learned and an attempt to organize information into an actionable plan that others can understand. Once a plan is ready, it's time to present it to anyone who will be working on the website so that everyone is on the same page. This requires meetings and collaboration.&lt;/p&gt;
&lt;p&gt;The strategy guides &lt;strong&gt;design&lt;/strong&gt; planning and creating what will become the actual website. These are the first drafts and documents that will guide actually creating the website prototypes according to a vision.&lt;/p&gt;
&lt;p&gt;Afterwards &lt;strong&gt;implementation&lt;/strong&gt; is possible based on all the work that was done to plan the new website or redesign. It is important to document how the website works for &lt;strong&gt;administration&lt;/strong&gt;. i.e; maintenance and future developments so that the website still meets its goals as it grows.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;The real process of architecting a website is &lt;em&gt;less linear&lt;/em&gt; than what I've presented, but this is the general course I try to follow since it is the most effective. &lt;strong&gt;It all starts with understanding goals and mapping things out though.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;My experience has been much better when I take the time to research the full project scope before I set off creating any ideas. Getting the order right helps sort out questions &lt;em&gt;in advance&lt;/em&gt; instead of getting stuck with no direction, or focusing on superficial issues and missing the deeper structural ones.&lt;/p&gt;
&lt;p&gt;Plus it makes project maintenance soooo much easier when there's a plan with an actual vision, instead of a hodgepodge mess of ideas that come and go.&lt;/p&gt;</content><category term="Lessons Learned"/><category term="Web Design"/></entry><entry><title>Self-taught Web Design</title><link href="https://web.putz.space/lessons-learned/self-teaching/" rel="alternate"/><published>2023-06-08T00:00:00-05:00</published><updated>2023-07-09T13:05:14-05:00</updated><author><name>Pierce Putz</name></author><id>tag:web.putz.space,2023-06-08:/lessons-learned/self-teaching/</id><summary type="html">&lt;p&gt;Insights from my own journey in self-taught web design.&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;I decided this spring that I want to become a &lt;strong&gt;Full Stack Developer&lt;/strong&gt;. I looked around at coding bootcamps, but I felt that for my own schedule &amp;amp; commitments that teaching myself would be most effective.&lt;/p&gt;
&lt;p&gt;Ultimately, I decided to come up with my own path and &lt;em&gt;here's how!&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Table of Contents&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#goals"&gt;Start with Goals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#path-to-full-stack"&gt;Path to Full Stack Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sticking-with-it"&gt;Sticking with it&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a name="goals"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Start with Goals&lt;/h2&gt;
&lt;p&gt;The first step on this journey was to &lt;strong&gt;identify my goals&lt;/strong&gt;. The focus on goals &lt;strong&gt;helps when important questions come up&lt;/strong&gt;, which there are a lot of when you're on your own.&lt;/p&gt;
&lt;p&gt;Personally, I've been interested in work from home jobs and flexible scheduling. I also like working on creative projects. A lot of this was already work I have been doing as a hobby, so I'm well situated to dive in deeper. Plus it'll make my already existing sites more sharp.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Long story short,&lt;/em&gt; I landed on web development as a good investment of my time.&lt;/p&gt;
&lt;p&gt;&lt;a name="path-to-full-stack"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Path to Full Stack Development&lt;/h2&gt;
&lt;h3&gt;The process&lt;/h3&gt;
&lt;p&gt;The first step to actually making this all &lt;em&gt;happen&lt;/em&gt; was to figure out the process from beginning to end.&lt;/p&gt;
&lt;p&gt;It went something like this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Research and compile a typical curriculum for &lt;strong&gt;Full Stack Development&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Find suitable books to read.&lt;/li&gt;
&lt;li&gt;Decide on which &lt;strong&gt;portfolio projects&lt;/strong&gt; to make.&lt;/li&gt;
&lt;li&gt;Keep focused and follow the timeframe.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;My goal is to be done in roughly 6 months to a year from when I started in March.&lt;/p&gt;
&lt;p&gt;The timeframe for completing this is flexible since there's no way to really know how long it will take initially, but as I go it's easier to get a sense of how long I'll need to read books, work on projects, etc. Keeping an time log of hours spent on portfolio projects also helps.&lt;/p&gt;
&lt;h3&gt;Curriculum&lt;/h3&gt;
&lt;p&gt;For the curriculum iteslf, I landed on these units as the &lt;em&gt;important&lt;/em&gt; areas to cover:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#reading-fundamentals"&gt;Fundamentals &amp;amp; Foundation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reading-web-design"&gt;Web Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reading-javascript"&gt;Frameworks and Libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reading-backend"&gt;Databases and Backend&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reading-security-deployment-operations"&gt;Security, Deployment and Operations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reading-workflow"&gt;Workflow and Nailing the Interview&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Coming up with &lt;strong&gt;portfolio projects&lt;/strong&gt; has been just a matter of looking at what areas of my own life have related needs that web design skills can actually solve. &lt;/p&gt;
&lt;p&gt;My first project since starting, &lt;a href="https://air.ludoloon.studio"&gt;Ludo Air&lt;/a&gt;, is a combination of my love of flight sim and my already existing online studio, &lt;a href="https://ludoloon.studio"&gt;LudoLoon Studio&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This website of course serves as portfolio to show off my web progress. My next project I'm thinking of is a Social Media Dashboard since I'm sick of dealing with Instagram and Twitter directly lol.&lt;/p&gt;
&lt;h3&gt;Reading List&lt;/h3&gt;
&lt;p&gt;Here's a list of some books that I've either been reading, or will get around to reading by the end of my studies. &lt;/p&gt;
&lt;p&gt;The most helpful ones (to me personally) are in bold. Some of these I had read previous to officially starting this project, but I went back and reviewed them to take notes.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NOTE: This evolves as I get through the books and sort which ones are actually useful or not.&lt;/em&gt;
&lt;a name="reading-fundamentals"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Fundamentals&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Learning Web Design - A Beginner's Guide to HTML, CSS, JavaScript, and Web Graphics (2018, O'Reilly Media)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/book/en/v2/Git-Basics-Getting-a-Git-Repository"&gt;Git Basics&lt;/a&gt;
&lt;a name="reading-web-design"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Web Design&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;A Web for Everyone (2014, Rosenfeld Media)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Design Systems - A practical guide to creating design languages for digital products (2017, Smashing Media).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/book/en/v2/Distributed-Git-Distributed-Workflows"&gt;Distributed Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Don't Make Me Think (3rd ed.) (Voices that Matter)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Information Architecture - For the Web and Beyond (O'Reilly Media, Inc.)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;The Principles of Beautiful Web Design (2020, SitePoint)&lt;/li&gt;
&lt;li&gt;Rocket Surgery Made Easy (Voices that Matter)
&lt;a name="reading-javascript"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Javascript Frameworks and Libraries&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;JavaScript - The Definitive Guide - Master the World's Most-Used Programming Language (2020, O'Reilly Media)&lt;/li&gt;
&lt;li&gt;JavaScript Everywhere: Building Cross-Platform Applications with GraphQL, React, React Native, and Electron (2020, O’Reilly Media) &lt;/li&gt;
&lt;li&gt;Learning React Modern Patterns for Developing React Apps (2020, O'Reilly)&lt;/li&gt;
&lt;li&gt;Mastering React Test-Driven Development (2022, Packt Publishing)
&lt;a name="reading-backend"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Databases and Backend&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Full Stack Web Development Guide - Everything Node JS, Express, APIs, EJS, React JS, Database Fundamentals, SQL Databases (2022, Independently published)
&lt;a name="reading-security-deployment-operations"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Security, Deployment and Operations&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;The DevOps Handbook - How to Create World-Class Agility, Reliability, &amp;amp; Security in Technology Organizations (2021, IT Revolution Press)&lt;/li&gt;
&lt;li&gt;Web Security for Developers (2020, Random House LCC)
&lt;a name="reading-workflow"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Workflow &amp;amp; Nailing the Interview&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Design Is a Job (2022, A Book Apart)&lt;/li&gt;
&lt;li&gt;Cracking the Coding Interview (2015, CareerCup)&lt;/li&gt;
&lt;li&gt;The Art of Agile Development (2021, O'Reilly Media)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a name="sticking-with-it"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Sticking with it&lt;/h2&gt;
&lt;p&gt;As you can imagine, the easy part is coming up with the roadmap. &lt;/p&gt;
&lt;p&gt;In order to get through the curriculum it's important to have a &lt;strong&gt;schedule&lt;/strong&gt;. I've been &lt;strong&gt;setting deadlines&lt;/strong&gt; to make sure that I don't get stuck on one project and risk the whole effort getting sidetracked.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Writing everything down is crucial&lt;/strong&gt;. I use &lt;a href="https://zim-wiki.org"&gt;Zim Wiki&lt;/a&gt; which makes it easy to connect documents, but any good notetaking app will do.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Spreadsheets&lt;/em&gt; for hours worked on projects.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Tasklists&lt;/em&gt; for next steps.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Notes&lt;/em&gt; of what you've read or planning projects.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Calendar reminders&lt;/strong&gt; and &lt;strong&gt;keeping tasklists&lt;/strong&gt; for when I have a moment to work remind me what steps I'm on currently or what I need to be reading.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Staying well&lt;/strong&gt; is crucial, which means taking breaks when burnt out and scheduling time to take care of yourself as well.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Assessing study progress&lt;/strong&gt; is an important process as milestones are acheived. This means deciding on next steps like what book to read next, framework to learn, or portfolio project to do.&lt;/p&gt;</content><category term="Lessons Learned"/><category term="Web Design"/></entry><entry><title>Hello World</title><link href="https://web.putz.space/news/hello_world/" rel="alternate"/><published>2023-06-04T00:00:00-05:00</published><updated>2023-06-08T20:37:41-05:00</updated><author><name>Pierce Putz</name></author><id>tag:web.putz.space,2023-06-04:/news/hello_world/</id><summary type="html">&lt;p&gt;This is my new web design &amp;amp; development portfolio!&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Hello!&lt;/h2&gt;
&lt;p&gt;This is my new web design &amp;amp; development portfolio!&lt;/p&gt;
&lt;p&gt;I've created a self-study program focusing on becoming a &lt;strong&gt;Full Stack Developer.&lt;/strong&gt; If you want to learn more about that process, &lt;a href="https://web.putz.space/lessons-learned/self-teaching/"&gt;I wrote a post about creating my own web development curriculum.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I started this process in &lt;time datetime="2023-03"&gt;March of 2023&lt;/time&gt;, but I've been making websites for almost two decades now as a hobbyist. I was inspired to learn more about web development in a professional capacity and decided that it would work best for my schedule &amp;amp; personal commitments to teach myself.&lt;/p&gt;
&lt;p&gt;At this point it's just a matter of reading about and practicing the skills I need to work in a professional capacity. I'll be using the blog to share lessons I've learned as well, both to help others like myself and (hopefully) prove that I know what I'm talking about lol.&lt;/p&gt;
&lt;p&gt;The portfolio section is meant to showcase what work I've already done as you'd expect. &lt;/p&gt;
&lt;p&gt;Excited to add more soon! Thanks for stopping by.&lt;/p&gt;</content><category term="News"/><category term="News"/></entry><entry><title>Ludo Air</title><link href="https://web.putz.space/portfolio/ludoair/" rel="alternate"/><published>2023-04-06T00:00:00-05:00</published><updated>2023-06-08T20:36:49-05:00</updated><author><name>Pierce Putz</name></author><id>tag:web.putz.space,2023-04-06:/portfolio/ludoair/</id><summary type="html">&lt;p&gt;&lt;a href="https://web.putz.space/portfolio/ludoair/"&gt;&lt;img alt="Ludo Air" src="https://web.putz.space/images/portfolio/ludoair.png"&gt;&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;figure&gt;
&lt;a href="https://air.ludoloon.studio"&gt;&lt;img alt="LudoAir Landing page" src="/images/portfolio/screenshots/ludoair.jpg"/&gt;&lt;/a&gt;
&lt;figcaption&gt;Click the photo above to visit! 🔗️&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2&gt;Ludo Air&lt;/h2&gt;
&lt;p&gt;Ludo Air is &lt;strong&gt;part portfolio project, part travel blog&lt;/strong&gt; and &lt;strong&gt;part virtual flight tours&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;All thanks to the amazing &lt;a href="https://www.flightsimulator.com/"&gt;Microsoft Flight Simulator&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Made for you whether you want to: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Book a virtual flight.&lt;/li&gt;
&lt;li&gt;Get quality flight sim footage for your project.&lt;/li&gt;
&lt;li&gt;Check out some cool photos for a new wallpaper.&lt;/li&gt;
&lt;li&gt;Get ideas for where to fly for yourself.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;For more details &lt;a href="https://air.ludoloon.studio/about/#clients-employers"&gt;see the about page&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;</content><category term="Portfolio"/></entry><entry><title>Twin Cities DSA</title><link href="https://web.putz.space/portfolio/tcdsa/" rel="alternate"/><published>2021-12-16T00:00:00-06:00</published><updated>2023-06-08T20:36:44-05:00</updated><author><name>Pierce Putz</name></author><id>tag:web.putz.space,2021-12-16:/portfolio/tcdsa/</id><summary type="html">&lt;p&gt;&lt;a href="https://web.putz.space/portfolio/tcdsa/"&gt;&lt;img alt="Twin Cities DSA" src="https://web.putz.space/images/portfolio/tcdsa.png"&gt;&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;figure&gt;
&lt;a href="https://twincitiesdsa.org"&gt;&lt;img alt="Twin Cities DSA" src="/images/portfolio/screenshots/tcdsa.jpg"/&gt;&lt;/a&gt;
&lt;figcaption&gt;Click the photo above to visit! 🔗️&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2&gt;Twin Cities DSA&lt;/h2&gt;
&lt;p&gt;I first got connected to the website redesign effort as a volunteer in December 2021 and took on leading the project in October 2022 until March 2023. In large part that experince is what inspired me with the confidence to learn web development more professionally.&lt;/p&gt;
&lt;p&gt;It was a collaborative effort where we gathered organizational feedback regarding the website and conducted card sorts, content audits and the like. Once we gathered all that, I sat down and charted the information architecture research that helped guide me in the transition from the old site to the one pictured above.&lt;/p&gt;
&lt;p&gt;The main issues I fixed were organizing content according to the research of our users mental model and creating a more aesthetic style &amp;amp; layout that's easier to navigate. The layout was crafted using the new Wordpress template editor for better futureproofing and easier onboarding for future maintainers.&lt;/p&gt;</content><category term="Portfolio"/></entry><entry><title>LudoLoon Studio</title><link href="https://web.putz.space/portfolio/ludoloonstudio/" rel="alternate"/><published>2021-02-28T00:00:00-06:00</published><updated>2023-06-08T20:36:48-05:00</updated><author><name>Pierce Putz</name></author><id>tag:web.putz.space,2021-02-28:/portfolio/ludoloonstudio/</id><summary type="html">&lt;p&gt;&lt;a href="https://web.putz.space/portfolio/ludoloonstudio/"&gt;&lt;img alt="LudoLoon Studio" src="https://web.putz.space/images/portfolio/ludoloonstudio.png"&gt;&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;figure&gt;
&lt;a href="https://ludoloon.studio"&gt;&lt;img alt="LudoLoon Studio landing page" src="/images/portfolio/screenshots/ludoloon-studio.jpg"/&gt;&lt;/a&gt;
&lt;figcaption&gt;Click the photo above to visit! 🔗️&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2&gt;LudoLoon Studio&lt;/h2&gt;
&lt;p&gt;I started an online studio during the pandemic called &lt;strong&gt;LudoLoon Studio&lt;/strong&gt;. Initially it started out for game development, but I decided to specialize in &lt;strong&gt;video game music&lt;/strong&gt;, whether as custom music or asset packs.&lt;/p&gt;
&lt;p&gt;Basically, it serves as an online space for my professional creative work.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;For more details &lt;a href="https://ludoloon.studio/about"&gt;see the about page&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;</content><category term="Portfolio"/></entry><entry><title>putz.space - music</title><link href="https://web.putz.space/portfolio/putz-space/" rel="alternate"/><published>2019-03-03T00:00:00-06:00</published><updated>2023-06-08T20:36:43-05:00</updated><author><name>Pierce Putz</name></author><id>tag:web.putz.space,2019-03-03:/portfolio/putz-space/</id><summary type="html">&lt;p&gt;&lt;a href="https://web.putz.space/portfolio/putz-space/"&gt;&lt;img alt="Groove Masta Putz" src="https://web.putz.space/images/portfolio/GrooveMastaPutz.png"&gt;&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;figure&gt;
&lt;a href="https://putz.space/music"&gt;&lt;img alt="putz.space landing page" src="/images/portfolio/screenshots/putz-space-music.jpg"/&gt;&lt;/a&gt;
&lt;figcaption&gt;Click the photo above to visit! 🔗️&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2&gt;putz.space - Music&lt;/h2&gt;
&lt;p&gt;I originally bought &lt;strong&gt;putz.space&lt;/strong&gt; so I could personalize my email address, but I also decided to use it as a website. I started it as a personal blog, eventually added a &lt;em&gt;(now defunct)&lt;/em&gt; Mastodon server and finally transitioned it into a music blog for my work as &lt;em&gt;Groove Masta Putz&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I'll eventually revisit it and spruce it up, but it's what I was doing with this space before I got into studying web design properly.&lt;/p&gt;</content><category term="Portfolio"/></entry></feed>